#!/bin/bash

function usage {
    echo ""
    echo "epubconvert"
    echo ""
    echo "Usage: epubconvert [options ...] <file.html>"
    echo ""
    echo "Options:"
    echo "   -o    relative or absolute path to custom output directory"
    echo "   -c    relative or absolute path to configuration file"
    echo "   -f    format: 'EPUB2' | 'EPUB3' | 'KF8' // DEFAULT: 'EPUB2'"
    echo "   -d    debug mode"
    1>&2; exit 1;
}
function exitonerror {
    echo "Errors encountered while running $2. Exited with code $1."
    echo "For details see $LOG"
    exit 1
}
function log {
    2>&1 2>>$OUT_DIR/$BASENAME.log
}

# cygwin check
cygwin=false;
case "`uname`" in
    CYGWIN*) cygwin=true;
esac
# script directory
DIR="$( cd -P "$(dirname $( readlink -f "$0" ))" && pwd )"
PWD=$(readlink -f .)
CALABASH=$DIR/calabash/calabash.sh
HEAP=1024m
# epubconvert configuration

# specify options
while getopts ":o:c:d" opt; do
    case "${opt}" in
	o)
	    OUT_DIR=${OPTARG}
	    ;;
	c)
	    CONF=${OPTARG}
	    ;;
	f)
	    FORMAT=${OPTARG}
	    ;;
	d)
	    DEBUG=yes
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    ;;
    esac
done
shift $((OPTIND-1))
# check if argument for file is set
if [ -z $1 ]; then
    usage
fi
# file as 1st argument
FILE=$(readlink -f $1)

# basename
BASENAME=$(basename $FILE .html)
BASENAME=$(basename $BASENAME .xhtml)

# config
CONFIG_IN_INPUTDIR="$(dirname $FILE)/epub-config.xml"

if [[ -z "$CONF" ]]; then
    if [ -e $CONFIG_IN_INPUTDIR ]; then
	CONF=$CONFIG_IN_INPUTDIR
    else
	CONF=$DIR/epubtools/sample/epub-config.xml
    fi
else
if [[ "$CONF" != /* ]]; then 
    CONF=$PWD/$CONF
fi
fi

# output directory
if [[ -z "$OUT_DIR" ]]; then
    OUT_DIR="$(dirname $(readlink -f "$FILE" ))"
else
if [[ "$OUT_DIR" != /* ]]; then 
    OUT_DIR="$PWD/$OUT_DIR"
fi
fi


mkdir -p $OUT_DIR

# set log 
LOG=$OUT_DIR/$BASENAME.log
# remove log from previous runs
if [ -e $LOG ]; then
    rm $LOG
fi


# debugging
DEBUG_DIR=$OUT_DIR/$BASENAME.debug

# make absolute paths
if $cygwin; then
    FILE=$(cygpath -ma "$FILE")
    DIR=$(cygpath -ma "$DIR")
    OUT_DIR=$(cygpath -ma "$OUT_DIR")
    CONF=$(cygpath -ma "$CONF")
    DEBUG_DIR_URI=file:/$(cygpath -ma "$DEBUG_DIR" )
else
    DEBUG_DIR_URI=file:$(readlink -f $DEBUG_DIR)
fi

# check if file exists
if [ ! -f $FILE ]; then
    echo "ERROR: input file not found: $FILE"
    usage
fi
if [ ! -f $CONF ]; then
    echo "ERROR: input file not found: $CONF"
    usage
fi

echo "starting epubconvert"

if [ "$DEBUG" = "yes" ]; then
    echo "debug mode: $DEBUG"
    echo "storing debug files to $DEBUG_DIR"
    echo ""
    echo "Parameters"
    echo "  workdir: $DIR"
    echo "  outdir: $OUT_DIR"
    echo "  file: $FILE"
    echo "  config: $CONF"
    echo "  debug: $DEBUG"
    echo "  debug-dir-uri $DEBUG_DIR_URI"
    echo ""
fi

# epubtools XProc pipeline
HEAP=$HEAP $CALABASH \
    -i source=$FILE \
    -i meta=$CONF \
    $DIR/xpl/epubtools-frontend.xpl \
    terminate-on-error=no \
    target=$FORMAT \
    debug=$DEBUG \
    debug-dir-uri=$DEBUG_DIR_URI \
    status-dir-uri=$DEBUG_DIR_URI/status 2>&1 2>>$LOG || exitonerror $? epubtools

echo "writing EPUB file => $OUT_DIR/$BASENAME.epub"
echo "epubconvert finished, for details see $LOG"
echo ""
